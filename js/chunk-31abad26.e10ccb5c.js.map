{"version":3,"sources":["webpack:///./src/pages/longText/LongText.vue?2f0d","webpack:///./src/pages/longText/LongText.vue","webpack:///./src/pages/longText/LongText.vue?d4ba","webpack:///./src/pages/longText/LongText.vue?8c19","webpack:///./src/pages/longText/minText.js"],"names":["class","for","id","type","name","multiple","choosefile","data","navType","longTextCatalog","length","catalogArr","catalogue","item","index","key","content","switchHighlight","$event","placeholder","queryKeyWord","startQuery","checked","queryType","RETRIEVAL_TYPE","paragraph","Knum","Ktotal","isLoading","longTextContent","__exports__","render","swh1","components","catalogNav","setup","proxy","keyWordBCol","keyWordSCol","keyWordBColRange","keyWordSColRange","keyPLength","catalogGrade","oldKeyEle","oldPEle","listNumId","paragraphClickHigh","textCenter","centerEle","oldQueryKeyWordReg","queryKeyWordArr","queryKeyWordReg","keyWordIndex","catalogueP","piece","oldQueryType","copyButton","isHaveKey","oldTargetEle","oldTargetText","oldNUm","document","getElementById","copyTable","initContent","pageContentArr","forEach","push","pageContent","join","fileList","files","reader","FileReader","readAsText","onload","e","generateCatalog","delTitlemap","fileContent","target","result","match","replace","console","log","filterSpace","setTimeout","fileCatalog","matchAll","Catalog","CatalogObj","recursion","parseInt","grade","text","children","recursionSetCatalog","tarObj","addObj","tableEleAll","Array","from","getElementsByTagName","itemTable","onmouseenter","createElement","className","innerHTML","currentEle","appendChild","onclick","removeChild","lastChild","width","on","emptySelectText","myTips","destroy","onmouseleave","window","getSelection","removeAllRanges","selection","empty","innerText","absQueryKeyWord","trim","split","filter","sort","a","b","resetData","time","setHighlight","timeEnd","isQuery","emptyAllHigh","targetEle","PieceLongHigh","clickPHigh","clickPieceList","emptyPieceLongHigh","targetLi","parentNode","listLength","keyText","childNodes","listStart","indexOf","listEnd","querySelector","keyIndex","longStart","longEnd","targetText","slice","newTargetEle","oldargetEle","style","backgroundColor","color","PEle","getElementsByClassName","keyEle","wrapNode","scrollTo","top","trueOffsetTop","behavior","elm","offsetTop","parent","offsetParent","forDomGetHighFilter","getQueryList","root","oneEleText","i","bool","some","includes","sentence","every","forDomGetHigh","currentNode","nodeText","nodeValue","nodeType","withSentence","highKeyStr","nodeTextHigh","replaceNode","sentenceArr","RegExp","satisfySentenceArr","itemSentence","itemSen","t","KW","temporarySpan","replaceChild","getOriginalPIndex","getOriginalIndex","pureListTextHigh","regInter","eval","p","regExp","grouping","keyPObj","kWord","group","DIndex","getHighIndex","KWArr","GIndex","handleIndex","prevIndex","currentIndex","nextIndex","initStartIndex","initEndIndex","handleIndexObj","startIndex","endIndex","highParagraphHandle","SEindexObj","pCenter","itemKeyWordObj","itemContent","str","h_tips","msg"],"mappings":"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","file":"js/chunk-31abad26.e10ccb5c.js","sourcesContent":["export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--11-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--11-oneOf-1-1!../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--11-oneOf-1-2!../../../node_modules/less-loader/dist/cjs.js??ref--11-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader-v16/dist/index.js??ref--1-1!./LongText.vue?vue&type=style&index=1&id=65b4974e&lang=less\"","<template>\n  <div class=\"long-text-page\">\n    <!-- 头部 文章标题 -->\n    <div class=\"doc-tit-box\">\n      <div class=\"doc-tit-content\">\n        详情页长文本功能测试组件\n        <input\n          type=\"file\"\n          name=\"file\"\n          multiple=\"multiple\"\n          id=\"files\"\n          @change=\"choosefile\"\n        />\n      </div>\n    </div>\n    <!-- 文本区域（左侧列白，右侧文本） -->\n    <div class=\"content-box\">\n      <!-- 左侧列表 -->\n      <div class=\"key-word-list\">\n        <div class=\"tab-nav\">\n          <p\n            class=\"nav-item\"\n            :class=\"{ active: data.navType === '0' }\"\n            @click=\"data.navType = '0'\"\n          >\n            文档目录\n          </p>\n          <p\n            class=\"nav-item\"\n            :class=\"{ active: data.navType === '1' }\"\n            @click=\"data.navType = '1'\"\n          >\n            匹配定位\n          </p>\n          <p\n            class=\"nav-item\"\n            :class=\"{ active: data.navType === '2' }\"\n            @click=\"data.navType = '2'\"\n          >\n            功能介绍\n          </p>\n        </div>\n        <!-- 文档目录 -->\n        <div class=\"text-list\" v-if=\"data.navType === '0'\">\n          <p class=\"no-tips\" v-if=\"data.longTextCatalog.length == 0\">\n            文档暂无目录\n          </p>\n          <catalog-nav v-else :catalogArr=\"data.longTextCatalog\"></catalog-nav>\n        </div>\n        <!-- 匹配定位 -->\n        <ul class=\"text-list\" v-else-if=\"data.navType === '1'\">\n          <p class=\"no-tips\" v-if=\"data.catalogue.length == 0\">\n            文中暂无符合的关键词\n          </p>\n          <!-- 目录个数 -->\n          <!-- <p>{{ data.catalogue.length }}</p> -->\n          <li\n            class=\"text-list-item\"\n            v-for=\"(item, index) in data.catalogue\"\n            :key=\"index\"\n            v-html=\"item.content\"\n            @click=\"switchHighlight($event, index)\"\n          ></li>\n        </ul>\n        <!-- 功能介绍 -->\n        <div class=\"text-list fun\" v-if=\"data.navType === '2'\">\n          <p>支持业务固定格式html文件和纯文本文件</p>\n          <p>1.单个多个关键词查询高亮（不需要同时存在）</p>\n          <p>2.同段查询（需要关键词同时存在）（纯文本不支持同段）</p>\n          <p>3.同句查询（需要关键词同时存在）</p>\n          <p>4.显示所有关键词个数及当前个数</p>\n          <p>5.上下切换关键词</p>\n          <p>6.当前选中关键词背景高亮</p>\n          <p>7.关键词前后文本列表</p>\n          <p>8.点击文本列表切换定位置对应关键词</p>\n          <p>9.点击文本列表执行关键词范围内文本背景高亮</p>\n          <p>10.表格复制</p>\n          <p>11.固定html文件支持生成目录</p>\n          <p>12.点击目录跳转对应位置</p>\n        </div>\n      </div>\n      <!-- 右侧长文本 -->\n      <div class=\"long-text-box\">\n        <!-- 长文本头部搜索 -->\n        <div class=\"text-title-box\">\n          <input\n            class=\"query-input\"\n            type=\"text\"\n            placeholder=\"请输入关键词在正文中搜索\"\n            v-model=\"data.queryKeyWord\"\n            @keydown.enter=\"startQuery\"\n          />\n          <p class=\"query-btn iconfont icon-sousuo\" @click=\"startQuery\"></p>\n          <!-- 类型 -->\n          <div class=\"querytype\">\n            <input\n              class=\"checkbox-type\"\n              id=\"t1\"\n              type=\"checkbox\"\n              @click=\"\n                data.queryType =\n                  data.queryType === data.RETRIEVAL_TYPE.paragraph\n                    ? data.RETRIEVAL_TYPE.piece\n                    : data.RETRIEVAL_TYPE.paragraph\n              \"\n              :checked=\"data.queryType === data.RETRIEVAL_TYPE.paragraph\"\n            />\n            <label for=\"t1\">同段</label>\n            <input\n              class=\"checkbox-type\"\n              id=\"t2\"\n              type=\"checkbox\"\n              @click=\"data.queryType = data.queryType === '2' ? '0' : '2'\"\n              :checked=\"data.queryType === '2'\"\n            />\n            <label for=\"t2\">同句</label>\n          </div>\n          <!-- 切换 -->\n          <div class=\"key-word-position\">\n            <span\n              class=\"iconfont icon-qiehuanqizuo\"\n              @click=\"switchHighlight('prev')\"\n            ></span>\n            <span>{{ data.Knum }} / {{ data.Ktotal }}</span>\n            <span\n              class=\"iconfont icon-qiehuanqiyou\"\n              @click=\"switchHighlight('next')\"\n            ></span>\n          </div>\n        </div>\n\n        <!-- 长文本 -->\n        <div class=\"long-text\">\n          <!-- 等待动画 -->\n          <div class=\"loading\" v-show=\"data.isLoading\">\n            <p class=\"loading-icon iconfont icon-sousuo\"></p>\n            <p id=\"LoadAnimation\"></p>\n          </div>\n          <div\n            class=\"center\"\n            id=\"longCenter\"\n            v-html=\"data.longTextContent\"\n          ></div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n<script>\nimport { reactive, getCurrentInstance, onMounted, watch } from 'vue';\nimport catalogNav from './CatalogNav.vue';\nimport Clipboard from 'clipboard';\nimport { RETRIEVAL_TYPE } from './longTextConst.js';\nimport { swh1 } from './minText.js';\n// import { swh1 } from './LongText.js';\n// import { swh1 } from './bigText.js';\n\nexport default {\n  components: {\n    catalogNav\n  },\n  setup() {\n    const { proxy } = getCurrentInstance();\n    const data = reactive({\n      keyWordBCol: 'red', //背景颜色\n      keyWordSCol: '#fff', //字体颜色\n      keyWordBColRange: '#000', //截取段背景颜色\n      keyWordSColRange: '#fff', //截取段字体颜色\n      keyPLength: 20, //截取关键词前后字符长度\n      catalogGrade: 0, //目录显示层级 0 是全部\n      // 以上是可配置\n      navType: '0', //目录分段导航\n      RETRIEVAL_TYPE, //检索类型\n      oldKeyEle: null, //保存旧的元素\n      oldPEle: null, //整段高亮\n      Knum: 0, //当前第几个关键词\n      Ktotal: 0, //搜索的全部关键词个数\n      listNumId: 0, //列表每一项标签id属性\n      paragraphClickHigh: [], //保存同段 符合条件的 段落dom\n      textCenter: '', // 除去标签的内容(高亮段落使用)\n      longTextCatalog: [], //长文本目录\n      longTextContent: '', // 渲染展示文本内容(高亮时不会改变，用于重置可以)\n      centerEle: null, // 长文本dom元素（用户循环改变文本高亮）\n      queryKeyWord: '软件', // 搜索关键词    证券 二次\n      oldQueryKeyWordReg: '', //保留上一次正则字符串\n      queryKeyWordArr: [], //关键词数组格式\n      queryKeyWordReg: '', // 用于正则的查询格式     证券|二次\n      keyWordIndex: [], // 保存所有关键词下标位置\n      catalogue: [], // 关键词对应段落目录(命名优化)\n      catalogueP: [], // 保存同篇段落目录(命名优化)\n      queryType: RETRIEVAL_TYPE.piece, // 0同篇  1同段  2同句\n      oldQueryType: '', // 保留上一次查询类型\n      copyButton: null, //表格复制按键元素\n      isLoading: false, //控制等待\n      isHaveKey: false, //是否有高亮词\n      oldTargetEle: null, //同篇截取高亮父节点\n      oldTargetText: '', //同篇截取高亮父纯文本\n      oldNUm: '' //同篇截取高亮id\n    });\n    // 挂在后获取相关元素\n    onMounted(() => {\n      data.centerEle = document.getElementById('longCenter'); // 获取长文本容器dom元素(页面dom改变data.centerEle自动变化)\n      copyTable(); //表格复制\n    });\n    // 初始化长文本内容（获取对象中文本拼接字符串）\n    const initContent = () => {\n      let pageContentArr = [];\n      swh1.forEach((item) => {\n        pageContentArr.push(item.pageContent);\n      });\n      data.longTextContent = pageContentArr.join(''); // 可添加高亮内容\n    };\n    initContent();\n    // 读取文件目录内容\n    const choosefile = () => {\n      data.longTextCatalog = [];\n      const fileList = document.getElementById('files').files[0];\n      const reader = new FileReader();\n      reader.readAsText(fileList, 'UTF-8');\n      reader.onload = function (e) {\n        // 生成目录\n        generateCatalog(e);\n        // 获取html中div_content的内容\n        const fileContent = e.target.result.match(\n          /<div id=\"div_content\"(?:.*?)>([\\s\\S]*)<\\/div>/\n        );\n        let delTitlemap; //保存参文本内容\n        if (fileContent) {\n          // 赋值分组1([\\s\\S]*?)所有子元素渲染页面，正则对象[1]是分组第一个分组[0]是匹配的全部内容\n          // 删除无效元素（根据具体匹配到的内容决定）\n          delTitlemap = fileContent[1].replace(\n            /<div id=\"div_titlemap\" style=\"display:none;\">([\\s\\S]*)<\\/div>/,\n            ''\n          );\n        } else {\n          //无div_content标签的文本或纯文本txt  包裹一个标签直接赋值显示（p标签是为了按段落进行递归）\n          console.log('无div_content标签，其他文本');\n          delTitlemap = `<p>${filterSpace(e.target.result)}</p>`;\n        }\n        // 重置渲染使用\n        data.longTextContent = delTitlemap;\n        data.oldQueryKeyWordReg = ''; //无内容搜索就设置空\n        data.catalogue = []; //清空匹配定位\n        // 重置表格复制\n        setTimeout(() => {\n          copyTable();\n        }, 0);\n      };\n    };\n    // 目录（1）\n    const generateCatalog = (e) => {\n      // 获取目录元素迭代器\n      const fileCatalog = e.target.result.matchAll(\n        /<div level=\"(.*?)\" tagetid=\"(.*?)\" catalogtitle=\"(.*?)\" ?>/g\n      );\n      for (const Catalog of fileCatalog) {\n        const CatalogObj = {\n          recursion: parseInt(Catalog[1]), //用于递归次数\n          grade: Catalog[1], //目录层级\n          id: Catalog[2], //目录id  例如：tag_p_1\n          text: Catalog[3], //目录内容\n          children: [] //目录子级\n        };\n        // 递归生成目录\n        recursionSetCatalog(data.longTextCatalog, CatalogObj);\n      }\n    };\n    // 目录（2）递归生成目录（目标对象，要追加的对象）\n    const recursionSetCatalog = (tarObj, addObj) => {\n      // 控制层级，不是0就控制层级数量，0是全部\n      if (data.catalogGrade) {\n        if (addObj.recursion > data.catalogGrade) return; //控制几级目录\n      }\n\n      // 递归次数等于1就追加到目标对象中\n      if (addObj.recursion === 1) {\n        tarObj.push(addObj);\n      } else {\n        // 不等于1，就递归标记-- 进入下次循环\n        addObj.recursion--;\n        // 再次传入当前  （对象中最后一个元素的children，及要追加的对象）\n        recursionSetCatalog(tarObj[tarObj.length - 1].children, addObj);\n      }\n    };\n    // 生成目录6级深度(手动生成，已优化上面递归)\n    /*    const generateCatalog = (e) => {\n      // 获取目录元素迭代器\n      const fileCatalog = e.target.result.matchAll(\n        /<div level=\"(.*?)\" tagetid=\"(.*?)\" catalogtitle=\"(.*?)\" ?>/g\n      );\n      let gradeNum1 = -1; //保存1级目录下标\n      let gradeNum2; //保存2级级目录下标\n      let gradeNum3; //保存3级级目录下标\n      let gradeNum4; //保存4级级目录下标\n      let gradeNum5; //保存5级级目录下标\n      for (const Catalog of fileCatalog) {\n        const CatalogObj = {\n          grade: Catalog[1], //目录层级\n          id: Catalog[2], //目录id\n          text: Catalog[3], //目录内容\n          children: [] //目录子级\n        };\n        if (Catalog[1] === '1') {\n          //一级目录\n          gradeNum1++;\n          gradeNum2 = -1; //有一级出现就要重置二级对象索引\n          data.longTextCatalog.push(CatalogObj);\n        } else if (Catalog[1] === '2') {\n          //二级目录\n          gradeNum2++;\n          gradeNum3 = -1;\n          data.longTextCatalog[gradeNum1].children.push(CatalogObj);\n        } else if (Catalog[1] === '3') {\n          //三级目录\n          gradeNum3++;\n          gradeNum4 = -1;\n          data.longTextCatalog[gradeNum1].children[gradeNum2].children.push(\n            CatalogObj\n          );\n        } else if (Catalog[1] === '4') {\n          //三级目录\n          gradeNum4++;\n          gradeNum5 = -1;\n          data.longTextCatalog[gradeNum1].children[gradeNum2].children[\n            gradeNum3\n          ].children.push(CatalogObj);\n        } else if (Catalog[1] === '5') {\n          //三级目录\n          gradeNum5++;\n          data.longTextCatalog[gradeNum1].children[gradeNum2].children[\n            gradeNum3\n          ].children[gradeNum4].children.push(CatalogObj);\n        } else if (Catalog[1] === '6') {\n          //三级目录\n          data.longTextCatalog[gradeNum1].children[gradeNum2].children[\n            gradeNum3\n          ].children[gradeNum4].children[gradeNum5].children.push(CatalogObj);\n        }\n      }\n    }; */\n    //（表格复制） 获取表格遍历添加复制按键，添加按键复制事件\n    const copyTable = () => {\n      // 全部table元素转化为真数组\n      let tableEleAll = Array.from(document.getElementsByTagName('table'));\n      // 遍历全部table元素\n      tableEleAll.forEach((itemTable, index) => {\n        // 移入表格创建复制按键，增加点击事件\n        itemTable.onmouseenter = function (e) {\n          data.copyButton = document.createElement('button'); //保存按键元素移除时使用\n          data.copyButton.className = 'copy';\n          data.copyButton.innerHTML = '复制表格';\n          const currentEle = e.target; //要复制的表格元素\n          currentEle.appendChild(data.copyButton); //复制按键添加到表格\n          // 点击复制按键，设置当前表格为复制目标\n          data.copyButton.onclick = new Clipboard('.copy', {\n            // 通过target指定要复印的节点\n            target: function () {\n              //点击时清除复制按键，解决复制带有复制表格字样\n              itemTable.removeChild(itemTable.lastChild);\n              console.log(currentEle);\n              // 复制时设置table属性宽度，解决复制到word中宽度超出\n              currentEle.width = '98%';\n              return currentEle;\n            }\n          });\n          //复制成功\n          data.copyButton.onclick.on('success', function (e) {\n            emptySelectText();\n            // 解决复制选中高亮（清除页面选中文字）\n            myTips('success', '复制成功~');\n            data.copyButton.onclick.destroy();\n          });\n          // 复制失败\n          data.copyButton.onclick.on('error', function (e) {\n            emptySelectText();\n            // 解决复制选中高亮（清除页面选中文字）\n            myTips('error', '复制失败~');\n            data.copyButton.onclick.destroy();\n          });\n        };\n        // 移除时清除按键事件和按键元素\n        itemTable.onmouseleave = function () {\n          data.copyButton.onclick.destroy();\n          itemTable.removeChild(itemTable.lastChild);\n        };\n      });\n    };\n    // 清空页面选中文字\n    const emptySelectText = () => {\n      window.getSelection\n        ? window.getSelection().removeAllRanges()\n        : document.selection.empty();\n    };\n\n    // 触发执行关键词查询（每次查询初始化，再执行新的查询）\n    const startQuery = () => {\n      data.textCenter = data.centerEle.innerText; //除去标签的内容(高亮段落使用)\n      const absQueryKeyWord = data.queryKeyWord.trim(); //关键词去除前后空格\n      if (absQueryKeyWord) {\n        // 有搜索内容\n        data.queryKeyWordArr = absQueryKeyWord\n          .split(' ')\n          .filter((item) => item.length); //获取关键词数组，删除空字符串（不然会卡死）\n        data.queryKeyWordArr.sort((a, b) => b.length - a.length); // 字符长度降序 [北 , 北京]=> [北京 , 北]\n        data.queryKeyWordReg = data.queryKeyWordArr.join('|'); //数组，再以 | 拼接（正则查询格式）\n        // 查询正则和类型都没变化就不执行新检索操作\n        if (\n          data.oldQueryKeyWordReg === data.queryKeyWordReg &&\n          data.oldQueryType === data.queryType\n        )\n          return;\n        // 执行查询前\n        data.oldQueryType = data.queryType; //备份此次搜索类型\n        data.oldQueryKeyWordReg = data.queryKeyWordReg; //备份此次搜索词\n        data.isLoading = true; //等待提示\n        resetData('haveQuery'); //内容不同 ,有高亮重置\n        setTimeout(() => {\n          console.time('检索时间');\n          setHighlight(); // 执行高亮逻辑,放在定时器才能显示loading\n          console.timeEnd('检索时间');\n        }, 0);\n      } else {\n        // data.isLoading = true; //等待提示\n        data.oldQueryKeyWordReg = ''; //无内容搜索就设置空\n        resetData(); //无内容  有高亮重置\n      }\n    };\n    // 重置关键词（1）重置高亮重置\n    const resetData = (isQuery) => {\n      if (data.isHaveKey) {\n        setTimeout(() => {\n          console.time('重置时间');\n          emptyAllHigh(); //清除全部高亮   速度慢\n          console.timeEnd('重置时间');\n          data.oldKeyEle = null; //清除保存旧的高亮元素\n          data.oldPEle = null; //点击高亮元素\n          data.paragraphClickHigh = []; //保存同段dom\n          data.catalogue = []; //重置关键词段落数组\n          data.catalogueP = []; //重置同篇段落目录\n          data.keyWordIndex = []; //重置关键词下标\n          data.Knum = 0; //重置当前高亮个数\n          data.Ktotal = 0; //重置当前关键词总个数\n          data.listNumId = 0; //重置列表计数\n          data.isHaveKey = false; //重置无高亮词\n          if (isQuery) return;\n          // 无关键词关闭等待\n          data.isLoading = false; //等待提示\n        }, 0);\n      }\n    };\n    //重置关键词（2）（速度优化） 清除长文本中所有高亮关键词\n    const emptyAllHigh = () => {\n      // 找到有高亮内容的外层包裹标签,修改innerHTML\n      // let temporarySpanAll = Array.from(\n      //   document.getElementsByClassName('temporarySpan')\n      // );\n      // temporarySpanAll.forEach((itemNode) => {\n      // 最佳清空方式：k速度优化++ 7196个标签 308.1728515625 ms 循环所有的临时temporarySpan，替换内容中class=\"swhKey\"高亮标签（这样不用重置table复制）\n      //  直接替换innerHTML产生bug\n      //   itemNode.parentNode.innerHTML = itemNode.innerHTML.replace(\n      //   /<span class=\"swhKey\"(?:.*?)>([\\s\\S]*?)<\\/span>/g,\n      //   '$1'\n      // );\n      // 下面上面均可(增加节点产生bug)\n      // itemNode.parentNode.replaceChild(\n      //   document.createTextNode(\n      //     itemNode.innerHTML.replace(\n      //       /<span class=\"swhKey\"(?:.*?)>([\\s\\S]*?)<\\/span>/g,\n      //       '$1'\n      //     )\n      //   ),\n      //   itemNode\n      // );\n      //  优化前方式1：使用节点替换节点内容（最慢）7196个标签 10559.537841796875 ms\n      // itemNode.parentNode.replaceChild(\n      //   document.createTextNode(itemNode.innerText),\n      //   itemNode\n      // );\n      // });\n      //  优化前方式2：直接替换整个文本，速度快，但是需要重置table复制 7196个标签 222.956787109375 ms\n      data.centerEle.innerHTML = data.longTextContent; //重置内容（上面清除全部高亮）\n      copyTable(); //重置表格复制按键\n      // 优化前方式3：倒找高亮标签只删除标签上的高亮属性（不可理，会残留很多无用标签）\n    };\n    //（长文本）点击切换当前高亮关键词（上下切换关键词）\n    const switchHighlight = (type, index) => {\n      // 总数小于1不可点击切换(小于2，1个关键词时不可切换，但是首次可以切到1==Knum=1 ，在后续就不可切换)\n      if (data.Knum > 0 && data.Ktotal < 2) return;\n      // 上下切换逻辑\n      if (type === 'next') {\n        //下一个\n        data.Knum = data.Knum === data.Ktotal ? 1 : ++data.Knum;\n      } else if (type === 'prev') {\n        //上一个\n        data.Knum = data.Knum <= 1 ? data.Ktotal : --data.Knum;\n      } else {\n        //点击整段获取首个子元素，点击高亮直接获取本身\n        const targetEle = type.target.children[0] || type.target;\n        // 通过id截取当前个数转数字类型，便于计算\n        data.Knum = parseInt(targetEle.id.split('_')[1]);\n        // 点击切换（同段同句 和 同篇）背景高亮 控制（注释即关闭）\n        if (!data.catalogueP.length) {\n          clickPHigh(index);\n        } else {\n          // 同篇截取字段背景高亮(注释后，取消同篇时点击列表，长文本中背景高亮功能)\n          PieceLongHigh(type);\n        }\n      }\n      // 通过id切换高亮和跳转位置\n      clickPieceList();\n    };\n    // 同篇点击截取字符背景高亮\n    const PieceLongHigh = (type) => {\n      // 点击同篇长文本背景色\n      setTimeout(() => {\n        emptyPieceLongHigh();\n        // 点击列表每一条时，获取li的元素，点击高亮子级就获取父级节点(解决点击列表高词有问题，待优化)\n        const targetLi = type.target.children.length\n          ? type.target\n          : type.target.parentNode;\n        //左侧列表长度\n        const listLength = targetLi.innerText.length;\n        // 当前关键词，第一个或者第二个节点的text  开头关键词就是 第一个（0）节点否则第二个节点（已解决bug 先0 后1）\n        const keyText =\n          targetLi.childNodes[0].innerText || targetLi.childNodes[1].innerText;\n        // 关键词前面字符个数（即为列表中关键词开始位置）\n        const listStart = targetLi.innerText.indexOf(keyText);\n        // 关键词后面字符个数（列表长度减去关键词开始位置）\n        const listEnd = listLength - listStart;\n        // ****下面开始计算长文本中，开始和结束截取\n        // 获取长文本中目标元素\n        const targetEle = document.querySelector(`#key_${data.Knum}`);\n        // 对应id位置,用于计算长文本中高亮段位置\n        const keyIndex = targetEle.parentNode.innerHTML.indexOf(\n          `key_${data.Knum}`\n        );\n        // 下面计算在长文本中以唯一id位置计算开始和结束截取位置\n        const longStart = keyIndex - 25 - listStart;\n        const longEnd = keyIndex + 89 + `${data.Knum}`.length + listEnd;\n        // 截取长文本中目标字段\n        const targetText = targetEle.parentNode.innerHTML.slice(\n          longStart,\n          longEnd\n        );\n        // 将目标文字含标签替换\n        targetEle.parentNode.innerHTML = targetEle.parentNode.innerHTML.replace(\n          targetText,\n          `<span style=\"background-color:${data.keyWordBColRange};color:${data.keyWordSColRange}\" >${targetText}</span>`\n        );\n        const newTargetEle = document.querySelector(`#key_${data.Knum}`);\n        data.oldTargetEle = newTargetEle.parentNode.parentNode;\n        data.oldTargetText = targetText;\n        data.oldNUm = data.Knum;\n      }, 0);\n    };\n    // 清除同篇长文本截取段高亮\n    const emptyPieceLongHigh = () => {\n      if (data.oldTargetText) {\n        // 标签文本替换纯文本\n        data.oldTargetEle.innerHTML = data.oldTargetEle.innerHTML.replace(\n          `<span style=\"background-color:${data.keyWordBColRange};color:${data.keyWordSColRange}\">${data.oldTargetText}</span>`,\n          data.oldTargetText\n        );\n        // 从新获取关键词元素，清除高亮样式\n        const oldargetEle = document.querySelector(`#key_${data.oldNUm}`);\n        // 如果页面存在当前关键词就清除样式，重新搜索时可能不存在当前id\n        if (oldargetEle) {\n          oldargetEle.style.backgroundColor = 'transparent'; // 清除背景色\n          oldargetEle.style.color = data.keyWordBCol; // 重置字体高亮\n        }\n        data.oldTargetText = ''; //清除老的截取字段\n      }\n    };\n    // 同段同句点击截取字符背景高亮\n    const clickPHigh = (index) => {\n      setTimeout(() => {\n        let PEle;\n        // 这里可以单独控制同段或同句截取段落是否有背景颜色\n        if (data.paragraphClickHigh.length) {\n          // 同段时找一级dom 高亮（保留下面一句，if直接删除）\n          PEle = data.paragraphClickHigh[index];\n        } else {\n          // 同句时找temporarySpan 高亮（保留下面一句，if直接删除）\n          PEle = document.getElementsByClassName('temporarySpan')[index];\n        }\n        // 清除之前元素的高亮\n        if (data.oldPEle) {\n          data.oldPEle.style.backgroundColor = 'transparent'; // 清除背景色\n          data.oldPEle.style.color = '#000';\n        }\n        if (PEle) {\n          PEle.style.backgroundColor = data.keyWordBColRange;\n          PEle.style.color = data.keyWordSColRange;\n          data.oldPEle = PEle;\n        }\n      }, 0);\n    };\n    //点击上下或者列表切换时都触发，清除截取字段背景色，清除上一个关键词高亮，设置当前关键词高亮\n    const clickPieceList = () => {\n      // 清除同段同句截取的高亮\n      if (data.oldPEle) {\n        data.oldPEle.style.backgroundColor = 'transparent'; // 清除背景色\n        data.oldPEle.style.color = '#000';\n      }\n      // 清除同篇时截取字段背景高亮\n      emptyPieceLongHigh();\n      //  获取对应长文本中元素\n      let keyEle = document.querySelector(`#key_${data.Knum}`);\n      // 清除上一个元素的样式\n      if (data.oldKeyEle) {\n        data.oldKeyEle.style.backgroundColor = 'transparent'; // 清除背景色\n        data.oldKeyEle.style.color = data.keyWordBCol; // 重置字体高亮\n      }\n      // 给当前元素增加样式\n      keyEle.style.backgroundColor = data.keyWordBCol; // 设置背景高亮\n      keyEle.style.color = data.keyWordSCol; // 设置当前字体白色\n      // 定位到元素位置,过度\n      // 方式1：不能设置具体位置 上中下（兼容问题）\n      /*   keyEle.scrollIntoView({\n        block: 'center', //定位在中间位置\n        behavior: 'smooth' // 平滑过渡\n      }); */\n      // 方式2：可指定具体位置\n      const wrapNode = document.querySelector('.long-text'); //内容外层容器\n      // 移动高度\n      wrapNode.scrollTo({\n        top: trueOffsetTop(keyEle) - 400, //顶部移出去偏移量\n        behavior: 'smooth'\n      });\n      // 保存当前元素,下次成为旧元素\n      data.oldKeyEle = keyEle;\n    };\n    // 获取元素距离浏览器top高度\n    const trueOffsetTop = (elm) => {\n      let top = elm?.offsetTop;\n      let parent = elm?.offsetParent; //最近的定位父元素\n      while (parent !== null) {\n        top += parent.offsetTop;\n        parent = parent.offsetParent;\n      }\n      return top;\n    };\n    //（查询开始）（全部）点击查询开始执行（匹配关键词高亮&&关键词列表生成）\n    const setHighlight = () => {\n      // 匹配高亮之前进行过滤提高速度（同篇不是用forDomGetHighFilter 直接使用 forDomGetHigh 检索速度变慢）\n      forDomGetHighFilter(data.centerEle);\n      // 未检索出关键词\n      if (data.Ktotal) {\n        data.isHaveKey = true; //有高亮词\n        // 有检索关键词再执行 段落列表获取\n        console.time('列表时间');\n        getQueryList();\n        console.timeEnd('列表时间');\n      } else {\n        myTips('error', '文档中无符合的关键词~');\n      }\n      data.isLoading = false;\n    };\n    //（全部）（速度优化）高亮匹配之前 k速度优化++ 缩短一半速度，对所有的一级dom进行过滤，存在关键词的在进行递归替换\n    const forDomGetHighFilter = (root) => {\n      const children = root.children;\n      const oneEleText = []; //保存包含关键词的第一层节点\n      if (data.queryType === RETRIEVAL_TYPE.piece) {\n        for (var i = 0; i < children.length; i++) {\n          // 同篇逻辑  当前段落包含一个关键词就返回true\n          const bool = data.queryKeyWordArr.some((item) => {\n            return children[i].innerText.includes(item);\n          });\n          // 保存当前段落\n          if (bool) {\n            // 同篇按段分需要追加catalogueP（表格跨列分割）（catalogueP注释按全文截取1）\n            // data.catalogueP.push({\n            //   content: children[i].innerText\n            // });\n            // =====\n            oneEleText.push(children[i]);\n          }\n        }\n      } else if (\n        data.queryType === RETRIEVAL_TYPE.paragraph ||\n        RETRIEVAL_TYPE.sentence\n      ) {\n        for (var i = 0; i < children.length; i++) {\n          // 同段逻辑  当前段落包含所有关键词才返回true\n          const bool = data.queryKeyWordArr.every((item) => {\n            return children[i].innerText.includes(item);\n          });\n          // 保存同段包含的元素\n          if (bool) {\n            // 同段k列表追加 保存同段文本,段落id和段落文本（之后处理内容高亮列表展示）\n            if (data.queryType === RETRIEVAL_TYPE.paragraph) {\n              data.paragraphClickHigh.push(children[i]);\n              data.catalogue.push({\n                content: children[i].innerText\n              });\n            }\n            // 保存当前段落\n            oneEleText.push(children[i]);\n          }\n        }\n      }\n      //对符合条件的节点进入递归 匹配高亮 （文章区域高亮）\n      if (oneEleText.length) {\n        oneEleText.forEach((item) => {\n          forDomGetHigh(item);\n        });\n      }\n    };\n\n    //（长文本）（速度优化）***主要高亮逻辑***    传入dom元素，遍历节点，文本节点查找关键词替换高亮，标签节点递归\n    const forDomGetHigh = (root) => {\n      //===================  不需要频繁操作整个dom 速度明显提高(提升100倍速度  k速度优化++6000ms-60ms\n      for (let i = 0; i < root.childNodes.length; i++) {\n        // 当前节点\n        const currentNode = root.childNodes[i];\n        // 节点文本\n        const nodeText = currentNode.nodeValue;\n        // console.log(!nodeText.includes('\\n'));\n        if (currentNode.nodeType == 1) {\n          //标签节点 直接队递归\n          forDomGetHigh(currentNode);\n        } else if (currentNode.nodeType == 3) {\n          // 同句   空格\\n停止,table中问题  data.queryType === RETRIEVAL_TYPE.sentence &&  !nodeText.includes('\\n')\n          //使用字符空格删除判断是否还有内容（阻止只有空格的内容）\n          if (\n            data.queryType === RETRIEVAL_TYPE.sentence &&\n            filterSpace(nodeText)\n          ) {\n            // 执行同句高亮(当前节点 ， 节点内容)（上面判断去除空格，但是使用时还是带空格）\n            withSentence(currentNode, nodeText);\n            // 一定要return，不然会再次对加高亮标签的元素再次处理（导致bug）\n            return;\n          } else {\n            // 同篇  按段分需要追加catalogueP（表格不跨列分割）（catalogueP注释按全文截取2）\n            if (data.queryType === RETRIEVAL_TYPE.piece) {\n              data.catalogueP.push({\n                content: nodeText\n              });\n            }\n            // 同段 同篇\n            // 无论文本中是否包含关键词都会执行替换（优化  可先判断是否包含再替换  感觉是一样的，replace也是判断包含再替换）\n            // 直接段落节点替换\n            const highKeyStr = nodeTextHigh(nodeText);\n            //嵌套标签需要下面判断，\n            // *****判断后的值和之前的值是否一致，一致代表不需要更改，不一致代表有高亮关键词\n            if (highKeyStr !== nodeText) {\n              replaceNode(currentNode, highKeyStr);\n            }\n          }\n        }\n      }\n      //===================\n\n      //  以下是之前逻辑  只能捕获有标签的文本  不能匹配没有标签的文本（所以改成判断节点）\n      //  操作dom过多查询慢\n      /*  const children = root.children;\n      // 同篇\n      if(children.length){\n        for (var i = 0; i < children.length;i++){\n         children[i].children&&forDomGetHigh(children[i])\n        }\n      }else {\n          // KW: 当前搜索的关键词本身\n          // k1: 关键词查找的位置下标\n          // 同段\n          // 同篇查找高亮    多分支正则    证券|二次  关键词数组转为 | | 拼接data.queryKeyWordReg\n          root.innerHTML= root.innerText.replace(new RegExp(data.queryKeyWordReg, \"g\"), (KW) => {\n              //关键词下标保存\n              data.Ktotal++;    //关键词总数量\n              return `<span id=\"key_${data.Ktotal}\" style=\"color:${data.keyWordBCol};padding:0 5px\">${KW}</span>`;\n          });\n      } */\n      // (每次查询都会重置整个文本html所以要从新创建复制按键，现在修改为删除之前高亮标签属性，不用再次设置表格)\n    };\n    //（长文本）同句单独逻辑\n    const withSentence = (currentNode, nodeText) => {\n      // 分割每一句  举例1: 搜索 孙 文 aaa孙a文aa。s孙a文hdddd;ccccc;hhhhs孙a文h\n      const sentenceArr = nodeText.split(new RegExp('[。；;]')); //'[。；; \\s]'  \\s可以以空格分句\n      // 获取过滤符合条件的数组  举例1: [aaa孙a文aa,s孙a文hdddd ,hhhhs孙a文h]\n      const satisfySentenceArr = sentenceArr.filter((itemSentence) => {\n        // 排除空字符串停止\n        if (!itemSentence) return false;\n        // 当前句子是否包含所有关键词\n        const bool = data.queryKeyWordArr.every((item) => {\n          return itemSentence.includes(item);\n        });\n        // 包含就返回\n        if (bool) return itemSentence;\n      });\n      // 空数组就停止，不然或导致无匹配的句子也加航临时高亮标识\n      if (!satisfySentenceArr.length) return;\n      // 将符合条件的关键词高亮\n      satisfySentenceArr.forEach((itemSen) => {\n        // 同句k列表追加\n        data.catalogue.push({\n          content: itemSen\n        });\n        // 每一句高亮\n        const highKeyStr = nodeTextHigh(itemSen);\n        // 文本替换（整个节点高亮）\n        // 每一句替换成高亮加外层包括temporarySpan\n        nodeText = nodeText.replace(\n          itemSen,\n          `<span class=\"temporarySpan\">${highKeyStr}</span>`\n        );\n      });\n      //方式1： 直接改变innerHTML\n      currentNode.parentNode.innerHTML = nodeText;\n      //   方式2：替换节点，需要增加临时withSentence  span标签（重置时需要清除）\n      // 再将整段临时创建外层标签withSentence包含所有同句\n      // const withSentenceSpan = document.createElement('span');\n      // withSentenceSpan.innerHTML = nodeText; //设置高亮内容\n      // withSentenceSpan.className = 'withSentence'; //设置class(方便清除时使用)\n      // // 替换当前节点内容（高亮节点，替换原始节点）\n      // currentNode.parentNode.replaceChild(withSentenceSpan, currentNode);\n    };\n    //（长文本）节点文本高亮（用于长文本），后期可与列表文本组合\n    const nodeTextHigh = (t) => {\n      return t.replace(new RegExp(data.queryKeyWordReg, 'g'), (KW) => {\n        data.Ktotal++; //替换次数（查找到的个数）\n        // class=\"swhKey\" 目前无用处（直接删除）\n        return `<span class=\"swhKey\" id=\"key_${data.Ktotal}\" style=\"color:${data.keyWordBCol};padding:0 5px\">${KW}</span>`;\n      });\n    };\n    //（长文本） 高亮文本替换到节点中(同篇，同段使用)\n    const replaceNode = (currentNode, highKeyStr) => {\n      // 创建临时span包裹元素，设置内容，必须创建标签节点，文本节点不会以html形式展示<span>\n      const temporarySpan = document.createElement('span');\n      temporarySpan.innerHTML = highKeyStr; //设置高亮内容\n      temporarySpan.className = 'temporarySpan'; //设置class(方便清除时使用)\n      // 高亮文本替换之前文本，父节点执行替换（新节点，就节点）\n      currentNode.parentNode.replaceChild(temporarySpan, currentNode);\n      /**\n       * 例如： <p>长文本渲染高亮替换逻辑</p>      查找的是 \"渲染\" 关键词\n       * 处理后高亮：<p>\n       *              替换以下整个包括元素（重置时直接删除temporarySpan）\n       *             <span class=\"temporarySpan\">\n       *               \"长文本\"\n       *              <span class=\"swhKey\" id=\"key_1\" style=\"color: rgb(255, 255, 255); padding: 0px 5px; background-color: red;\">渲染</span>\n       *               \"高亮替换逻辑\"\n       *             </span>\n       *            </p>\n       *  */\n    };\n\n    //（列表）获取关键词段落列表（同篇 同段 同句）\n    const getQueryList = () => {\n      // 同篇段落获取\n      if (data.queryType === RETRIEVAL_TYPE.piece) {\n        // 有catalogueP按段分，没有按全篇\n        data.catalogueP.length ? getOriginalPIndex() : getOriginalIndex();\n      } else if (\n        data.queryType === RETRIEVAL_TYPE.paragraph ||\n        RETRIEVAL_TYPE.sentence\n      ) {\n        // 同段 同句 列表 处理段落时高亮\n        data.catalogue.forEach((item) => {\n          item.content = pureListTextHigh(item.content); //处理高亮\n        });\n      }\n      // 搜索完成后定位至第一个关键词\n      switchHighlight('next');\n    };\n    //同篇段落分割\n    const getOriginalPIndex = () => {\n      const regInter = eval(`/${data.queryKeyWordReg}/g`); //匹配正则\n      // 循环段落\n      data.catalogueP.forEach((p) => {\n        const regExp = p.content.matchAll(regInter);\n        const grouping = []; //每个段落下标单独存放\n        for (const item of regExp) {\n          // 保存每个关键词下标和关键词\n          const keyPObj = {\n            kWord: item[0], //查询的字符串\n            index: item.index //查询的下标\n          };\n          // 每段追加到组数组\n          grouping.push(keyPObj); //保存所有关键词下标\n        }\n        // 在追加到整个数组\n        data.keyWordIndex.push(grouping);\n      });\n      // 循环获取每段开始结束位置(DIndex,替换每个段众多个关键词)\n      data.keyWordIndex.forEach((group, DIndex) => {\n        getHighIndex(group, DIndex);\n      });\n    };\n    // 同篇 按全片分割列表\n    //（列表）同篇 列表（1）  获取原始内容中关键词下标\n    const getOriginalIndex = () => {\n      // 去除标签内容获取关键词位置\n      const regInter = eval(`/${data.queryKeyWordReg}/g`); //匹配正则\n      const regExp = data.textCenter.matchAll(regInter); //匹配内容迭代器\n      for (const item of regExp) {\n        const keyPObj = {\n          kWord: item[0], //查询的字符串\n          index: item.index //查询的下标\n        };\n        data.keyWordIndex.push(keyPObj); //保存所有关键词下标\n      }\n      // 根据关键词下标，处理为前后30字符截取下标对象\n      getHighIndex(data.keyWordIndex, 0);\n    };\n    //（列表）同篇 列表（2） 根据关键词下标，处理为前后30字符截取下标对象，生成关键词段落数组\n    const getHighIndex = (KWArr, GIndex) => {\n      let handleIndex = [];\n      for (let i = 0; i < KWArr.length; i++) {\n        // 前面位置，第一个就设置0开始，不是第一个就设置前面位置加字符长度\n        const prevIndex = i\n          ? KWArr[i - 1].index + KWArr[i - 1].kWord.length\n          : 0;\n        const currentIndex = KWArr[i].index; //当前关键词位置\n        //下一个关键词位置,最后一次不存在undefined （不需要特殊判断，截取查出长度自动截取到最后）\n        const nextIndex = KWArr[i + 1]?.index;\n        //初始化开始截取位置，当前位置-30字符\n        const initStartIndex = currentIndex - data.keyPLength;\n        //初始化结束位置  ，当前位置+关键词长度+30字符\n        const initEndIndex =\n          currentIndex + KWArr[i].kWord.length + data.keyPLength;\n        let handleIndexObj = {\n          // 开始位置小于上一个关键词位置，就设置上个位置，否则设置当前开始位置（前面关键词停止）\n          startIndex: initStartIndex < prevIndex ? prevIndex : initStartIndex,\n          // 结束位置大于下一个关键词位置，就设置到关键词位置，否则就设置当前结束位置\n          // （后面关键词停止）undefined时始终按结束位置，超出截取到最后\n          endIndex: initEndIndex > nextIndex ? nextIndex : initEndIndex\n        };\n        handleIndex.push(handleIndexObj); // 开始结束位置对象\n      }\n      highParagraphHandle(handleIndex, GIndex); // 生成关键词段落数组\n    };\n    //（列表）同篇  按全片或段落   列表（3）  根据开始结束位置，生成关键词段落列表\n    const highParagraphHandle = (SEindexObj, GIndex) => {\n      SEindexObj.forEach((item, index) => {\n        let pCenter = ''; //目录每段文字\n        if (data.catalogueP.length) {\n          // 有data.catalogueP代表按段分割\n          pCenter = data.catalogueP[GIndex].content.slice(\n            item.startIndex,\n            item.endIndex\n          );\n        } else {\n          //  全片分割\n          //  截取关键词前后字段\n          pCenter = data.textCenter.slice(item.startIndex, item.endIndex);\n        }\n        // 创建段落对象id和高亮内容\n        const itemKeyWordObj = {\n          content: pureListTextHigh(pCenter) //处理高亮\n        };\n        // 同篇k列表追加 保存关键词段落对象\n        data.catalogue.push(itemKeyWordObj);\n      });\n    };\n    //（列表）纯文本列表高亮（用于列表最后一步替每一条文本高亮）\n    const pureListTextHigh = (itemContent) => {\n      return itemContent.replace(\n        new RegExp(data.queryKeyWordReg, 'g'),\n        (KW, index) => {\n          data.listNumId++;\n          //  console.log(index);   这里获取同段中关键词位置（可以开发段落长度截取，不显示显示整个段落）\n          return `<span id=\"list_${data.listNumId}\" style=\"color:${data.keyWordBCol};padding:0 5px\">${KW}</span>`; // 内容处理关键词高亮\n        }\n      );\n    };\n    // 全局过滤空格\n    const filterSpace = (str) => {\n      return str.replace(/(^\\s+)|(\\s+$)|\\s+/g, '');\n    };\n    // 提示浮窗\n    const myTips = (type, text) => {\n      proxy.h_tips({\n        type: type, //success   error\n        msg: text,\n        top: 30,\n        time: 1000\n      });\n    };\n    return {\n      data,\n      startQuery,\n      switchHighlight,\n      choosefile\n    };\n  }\n};\n</script>\n\n<style lang=\"less\" scoped>\n// loading动画\n#LoadAnimation {\n  margin: 250px auto;\n  width: 50px;\n  height: 50px;\n  border: 2px white solid;\n  border-left-color: #9c9c9c;\n  border-right-color: #9c9c9c;\n  border-radius: 100%;\n  animation: loading1 0.5s infinite linear;\n}\n@keyframes loading1 {\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n}\n// 搜索动画放大镜\n.loading-icon {\n  position: absolute;\n  left: 50%;\n  top: -22px;\n  font-size: 40px;\n  transform: translate(-50%);\n  color: #9c9c9c;\n}\n.long-text-page {\n  width: 1200px;\n  margin: 0 auto;\n  .doc-tit-box {\n    font-size: 14px;\n    background: #f6fafd;\n    font-family: 'Microsoft YaHei';\n    width: 100%;\n    padding: 18px 10px;\n    box-sizing: border-box;\n    margin-top: 10px;\n    .doc-tit-content {\n      margin-bottom: 10px;\n      width: 100%;\n      height: 70px;\n      padding: 16px 14px;\n      background: white;\n      border-bottom: 1px solid #eee;\n      box-shadow: 0px 2px 2px #eee;\n      box-sizing: border-box;\n      text-align: center;\n      font-size: 16px;\n      font-weight: 700;\n    }\n  }\n  .content-box {\n    width: 100%;\n    height: 696px;\n    padding-top: 16px;\n    box-sizing: border-box;\n    .key-word-list {\n      -moz-user-select: none; //禁止出现复制高亮\n      -webkit-user-select: none;\n      -ms-user-select: none;\n      -khtml-user-select: none;\n      user-select: none;\n      width: 306px;\n      border: 1px solid #eee;\n      box-shadow: 0px 3px 3px rgb(238, 238, 238);\n      background-color: #fff;\n      cursor: pointer;\n      float: left;\n      .tab-nav {\n        height: 48px;\n        background: #f6fafd;\n        display: flex;\n        .nav-item {\n          flex: 1;\n          line-height: 46px;\n          text-align: center;\n          font-size: 14px;\n          font-weight: 700;\n          border-top: 2px solid #f6fafd;\n          &.active {\n            background: #fff;\n            color: #3c7eec;\n            border-top: 2px solid #3c7eec;\n          }\n        }\n      }\n      .text-list {\n        height: 630px;\n        overflow: auto;\n        &.fun {\n          p {\n            font-size: 12px;\n            line-height: 26px;\n            padding: 0 5px;\n            color: #999;\n          }\n        }\n        .no-tips {\n          text-align: center;\n          margin-top: 150px;\n          color: #999;\n          font-size: 14px;\n        }\n        .text-list-item {\n          font-size: 14px;\n          padding: 10px 5px;\n          border-bottom: 1px solid #ddd;\n        }\n      }\n    }\n\n    .long-text-box {\n      position: relative;\n      width: 880px;\n      box-shadow: 0px 3px 3px #eee;\n      background-color: #fff;\n      float: right;\n      .loading {\n        position: absolute;\n        top: 48px;\n        width: 100%;\n        height: 630px;\n        background: rgba(255, 255, 255, 0.9);\n        z-index: 999;\n        text-align: center;\n        line-height: 600px;\n      }\n      .text-title-box {\n        position: relative;\n        height: 48px;\n        background: #f6fafd;\n        padding-top: 10px;\n        padding-left: 30px;\n        padding-right: 30px;\n        box-sizing: border-box;\n        .query-input {\n          float: left;\n          width: 452px;\n          height: 30px;\n          border-radius: 5px;\n          border: 1px solid #ddd;\n          padding: 0 40px;\n          border-radius: 15px;\n          box-sizing: border-box;\n          background: #fff;\n          outline: none;\n          border: 1px solid #afb6bc;\n          color: #333;\n          // border: none;\n        }\n        .query-btn {\n          position: absolute;\n          top: 10px;\n          left: 35px;\n          cursor: pointer;\n          text-align: center;\n          line-height: 30px;\n          width: 30px;\n          font-size: 24px;\n          border-radius: 3px;\n          color: #fff;\n          transition: 0.3s;\n          color: #333;\n          &:hover {\n            color: rgb(0, 153, 255);\n          }\n        }\n        .querytype {\n          -moz-user-select: none; //禁止出现复制高亮\n          -webkit-user-select: none;\n          -ms-user-select: none;\n          -khtml-user-select: none;\n          user-select: none;\n          cursor: pointer;\n          text-align: center;\n          float: left;\n          width: 150px;\n          margin-left: 20px;\n          text-align: center;\n          line-height: 30px;\n          font-size: 14px;\n          .checkbox-type {\n            cursor: pointer;\n            vertical-align: middle;\n            margin-right: 5px;\n          }\n          label {\n            cursor: pointer;\n            vertical-align: -2px;\n            margin-right: 20px;\n          }\n        }\n        .key-word-position {\n          -moz-user-select: none; //禁止出现复制高亮\n          -webkit-user-select: none;\n          -ms-user-select: none;\n          -khtml-user-select: none;\n          user-select: none;\n          cursor: pointer;\n          float: right;\n          line-height: 30px;\n          span {\n            margin: 0 5px;\n            font-size: 14px;\n          }\n          .iconfont {\n            font-size: 12px;\n            color: rgb(160, 160, 160);\n            &:hover {\n              color: rgb(0, 153, 255);\n            }\n          }\n        }\n      }\n      .long-text {\n        height: 630px;\n        overflow: auto;\n        .center {\n          padding: 20px 12px;\n        }\n      }\n    }\n  }\n}\n</style>\n\n<style lang=\"less\">\n// 长文本内样式规范\n.center {\n  line-height: 22px;\n  text-align: justify;\n  table {\n    position: relative;\n    border-collapse: collapse;\n    border-spacing: 0;\n    width: 98%;\n    text-align: center;\n    color: rgb(51, 51, 51);\n    font-size: 12px;\n    border: 0px;\n    margin: 10px 0;\n    transition: 0.3s;\n    tbody {\n      border: 1px solid #666;\n      td {\n        height: 36px;\n      }\n    }\n    &:hover {\n      cursor: pointer;\n      box-shadow: 5px 5px 5px rgb(158, 158, 158);\n    }\n    .copy {\n      outline: none;\n      cursor: pointer;\n      position: absolute;\n      width: 66px;\n      height: 30px;\n      top: -25px;\n      right: -20px;\n      line-height: 30px;\n      border-radius: 4px;\n      color: white;\n      border: 0px;\n      opacity: 0.5;\n      background: #ff8800;\n      &:hover {\n        opacity: 1;\n      }\n    }\n  }\n  /*文档内容清洗样式*/\n  h1 a,\n  h1 span {\n    font-size: 16px !important;\n    font-weight: bold !important;\n  }\n  /*二级目录*/\n  h2 a,\n  h2 span {\n    font-size: 14px !important;\n    font-weight: bold !important;\n  }\n  /*三级目录*/\n  h3 a,\n  h3 span {\n    font-size: 14px !important;\n    font-weight: normal !important;\n  }\n  /*3.8.2.7的公告详情页标题样式*/\n  h1 {\n    padding-left: 0 !important;\n    text-align: left !important;\n    text-indent: 0 !important;\n    font-size: 16px;\n    font-weight: bold;\n  }\n  h2 {\n    padding-left: 0 !important;\n    text-align: left !important;\n    text-indent: 0 !important;\n    font-size: 14px;\n    font-weight: bold;\n  }\n  h3,\n  h4,\n  h5,\n  h6 {\n    padding-left: 0 !important;\n    text-align: left !important;\n    text-indent: 28px !important;\n    font-size: 14px;\n    font-weight: normal !important;\n  }\n  /*正文里面的p和span标签*/\n  p,\n  span {\n    text-indent: 28px !important;\n    padding: 0 5px;\n    font-weight: normal !important;\n    font-size: 14px;\n  }\n  p {\n    padding: 5px;\n  }\n}\n</style>\n","import { render } from \"./LongText.vue?vue&type=template&id=65b4974e&scoped=true\"\nimport script from \"./LongText.vue?vue&type=script&lang=js\"\nexport * from \"./LongText.vue?vue&type=script&lang=js\"\n\nimport \"./LongText.vue?vue&type=style&index=0&id=65b4974e&lang=less&scoped=true\"\nimport \"./LongText.vue?vue&type=style&index=1&id=65b4974e&lang=less\"\n\nimport exportComponent from \"D:\\\\a2_swh\\\\ProjectSourceCode\\\\PersonalBlog\\\\personal-notes-vue3\\\\node_modules\\\\vue-loader-v16\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-65b4974e\"]])\n\nexport default __exports__","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--11-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--11-oneOf-1-1!../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--11-oneOf-1-2!../../../node_modules/less-loader/dist/cjs.js??ref--11-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader-v16/dist/index.js??ref--1-1!./LongText.vue?vue&type=style&index=0&id=65b4974e&lang=less&scoped=true\"","export const swh1 = [\r\n  {\r\n      \"pageContent\": \"<h1 style=\\\"margin-left:0.00pt;text-indent:24.00pt;\\\" id=\\\"tag_h1_1\\\">关于大汉软件股份有限公司首次公开发行股票并在科创板上市申请文件的审核问询函的回复（2021 年半年报财务数据更新版）保荐机构（主承销商）二〇二一年十二月安信证券股份有限公司关于大汉软件股份有限公司首次公开发行股票； 并在科创板上市申请文件的审核问询函的回复上海证券交易所科创板上市审核中心：</h1><p id=\\\"tag_p_1\\\">安信证券股份有限公司（以下简称“安信证券”“保荐机构”）于 2021 年7 月 19 日收到贵所的《关于大汉软件股份有限公司首次公开发行股票并在科创板上市申请文件的审核问询函》（上证科审（审核）〔2021〕422 号）（以下简称 “问询函”）以后，及时组织大汉软件股份有限公司（以下简称“发行人”“大汉软件”或“公司”）、毕马威华振会计师事务所（特殊普通合伙）（以下简称“申报会计师”）对贵所反馈意见中提出的问题进行了认真落实，同时对申报材料和招股说明书中的相应材料作了补充和修改；在此基础上，申报会计师出具了《关于大汉软件股份有限公司首次公开发行股票并在科创板上市申请文件的审核问询函回复的专项说明》;现将审核问询函问题的落实情况逐条书面回复如下，其中涉及《招股说明书》的修改部分，已在《招股说明书》中楷体加粗予以标明，请审阅。测试测试测试;</p><p id=\\\"tag_p_2\\\">对本回复材料中的发行人回复（包括补充披露和说明的事项），本保荐机构均已进行核查，确认并保证其真实、完整、准确。</p><p id=\\\"tag_p_3\\\">本回复中的简称与《招股说明书》中的简称具有相同含义。</p><table cellspacing=\\\"0\\\" border=\\\"1px\\\" iscatalog=\\\"true\\\" id=\\\"tag_table_1\\\"> \\n <tbody> \\n  <tr style=\\\"height:20pt\\\"> \\n   <td style=\\\"width:214pt;\\\">审核问询函所列问题</td> \\n   <td style=\\\"width:213pt;\\\">黑体</td> \\n  </tr> \\n  <tr style=\\\"height:20pt\\\"> \\n   <td style=\\\"width:214pt;\\\">对审核问询函所列问题的回复</td> \\n   <td style=\\\"width:213pt;\\\">宋体</td> \\n  </tr> \\n  <tr style=\\\"height:20pt\\\"> \\n   <td style=\\\"width:214pt;\\\">对招股说明书的补充披露、修订及引用</td> \\n   <td style=\\\"width:213pt;\\\">楷体（加粗）</td> \\n  </tr> \\n </tbody> \\n</table><h4 style=\\\"padding-top: 1pt;padding-left: 25pt;text-indent: 0pt;text-align: center;\\\" iscatalog=\\\"true\\\" id=\\\"tag_h4_1\\\"><a name=\\\"bookmark0\\\" id=\\\"tag_a_1\\\" class=\\\"tone\\\">目 录</a></h4><p iscatalog=\\\"true\\\" id=\\\"tag_p_4\\\"><a id=\\\"tag_a_2\\\" thref=\\\"#bookmark216\\\">1 </a><a id=\\\"tag_a_3\\\" thref=\\\"#bookmark216\\\">、 关 于 科 创 属 性 </a><a id=\\\"tag_a_4\\\" thref=\\\"#bookmark216\\\">3</a></p><p iscatalog=\\\"true\\\" id=\\\"tag_p_5\\\"><a id=\\\"tag_a_5\\\" thref=\\\"#bookmark217\\\">2 </a><a id=\\\"tag_a_6\\\" thref=\\\"#bookmark217\\\">、 关 于 市 场 份 额 </a><a id=\\\"tag_a_7\\\" thref=\\\"#bookmark217\\\">95</a></p><p iscatalog=\\\"true\\\" id=\\\"tag_p_6\\\"><a id=\\\"tag_a_8\\\" thref=\\\"#bookmark218\\\">3 </a><a id=\\\"tag_a_9\\\" thref=\\\"#bookmark218\\\">、 关 于 关 联 交 易 </a><a id=\\\"tag_a_10\\\" thref=\\\"#bookmark218\\\">104</a></p><p iscatalog=\\\"true\\\" id=\\\"tag_p_7\\\"><a id=\\\"tag_a_11\\\" thref=\\\"#bookmark219\\\">4 </a><a id=\\\"tag_a_12\\\" thref=\\\"#bookmark219\\\">、 关 于 销 售 模 式 和 主 要 客 户 </a><a id=\\\"tag_a_13\\\" thref=\\\"#bookmark219\\\">126</a></p>\"\r\n  },\r\n  {\r\n      \"pageContent\": \"<p iscatalog=\\\"true\\\" id=\\\"tag_p_8\\\"><a id=\\\"tag_a_14\\\" thref=\\\"#bookmark220\\\">5 </a><a id=\\\"tag_a_15\\\" thref=\\\"#bookmark220\\\">、 关 于 采 购 及 供 应 商 </a><a id=\\\"tag_a_16\\\" thref=\\\"#bookmark220\\\">134</a></p><p iscatalog=\\\"true\\\" id=\\\"tag_p_9\\\"><a id=\\\"tag_a_17\\\" thref=\\\"#bookmark221\\\">6 </a><a id=\\\"tag_a_18\\\" thref=\\\"#bookmark221\\\">、 关 于 收 入 </a><a id=\\\"tag_a_19\\\" thref=\\\"#bookmark221\\\">149</a></p><p iscatalog=\\\"true\\\" id=\\\"tag_p_10\\\"><a id=\\\"tag_a_20\\\" thref=\\\"#bookmark222\\\">7 </a><a id=\\\"tag_a_21\\\" thref=\\\"#bookmark222\\\">、 关 于 成 本 及 毛 利 率 </a><a id=\\\"tag_a_22\\\" thref=\\\"#bookmark222\\\">157</a></p><p iscatalog=\\\"true\\\" id=\\\"tag_p_11\\\"><a id=\\\"tag_a_23\\\" thref=\\\"#bookmark223\\\">8 </a><a id=\\\"tag_a_24\\\" thref=\\\"#bookmark223\\\">、 关 于 研 发 费 用 </a><a id=\\\"tag_a_25\\\" thref=\\\"#bookmark223\\\">170</a></p><p iscatalog=\\\"true\\\" id=\\\"tag_p_12\\\"><a id=\\\"tag_a_26\\\" thref=\\\"#bookmark224\\\">9 </a><a id=\\\"tag_a_27\\\" thref=\\\"#bookmark224\\\">、 关 于 存 货 </a><a id=\\\"tag_a_28\\\" thref=\\\"#bookmark224\\\">179</a></p><p iscatalog=\\\"true\\\" id=\\\"tag_p_13\\\"><a id=\\\"tag_a_29\\\" thref=\\\"#bookmark225\\\">10 </a><a id=\\\"tag_a_30\\\" thref=\\\"#bookmark225\\\">、 关 于 应 收 账 款 </a><a id=\\\"tag_a_31\\\" thref=\\\"#bookmark225\\\">197</a></p><p iscatalog=\\\"true\\\" id=\\\"tag_p_14\\\"><a id=\\\"tag_a_32\\\" thref=\\\"#bookmark226\\\">11 </a><a id=\\\"tag_a_33\\\" thref=\\\"#bookmark226\\\">、 关 于 其 他 事 项 </a><a id=\\\"tag_a_34\\\" thref=\\\"#bookmark226\\\">211</a></p><p iscatalog=\\\"true\\\" id=\\\"tag_p_15\\\"><a id=\\\"tag_a_35\\\" thref=\\\"#bookmark227\\\">12 </a><a id=\\\"tag_a_36\\\" thref=\\\"#bookmark227\\\">、 关 于 完 善 申 报 文 件 </a><a id=\\\"tag_a_37\\\" thref=\\\"#bookmark227\\\">216</a></p><p iscatalog=\\\"true\\\" id=\\\"tag_p_16\\\"><a id=\\\"tag_a_38\\\" thref=\\\"#bookmark228\\\">13 </a><a id=\\\"tag_a_39\\\" thref=\\\"#bookmark228\\\">、 保 荐 机 构 总 体 核 查 意 见 </a><a id=\\\"tag_a_40\\\" thref=\\\"#bookmark228\\\">236</a></p><p iscatalog=\\\"true\\\" id=\\\"tag_p_17\\\"><a name=\\\"bookmark1\\\" id=\\\"tag_a_41\\\" class=\\\"ttwo\\\">1</a>、关于科创属性<a name=\\\"bookmark216\\\" id=\\\"tag_a_42\\\">‌</a></p>\"\r\n  }\r\n]"],"sourceRoot":""}